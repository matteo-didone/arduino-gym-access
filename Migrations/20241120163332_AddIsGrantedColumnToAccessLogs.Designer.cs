// <auto-generated />
using System;
using ArduinoGymAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace arduino_gym_access.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241120163332_AddIsGrantedColumnToAccessLogs")]
    partial class AddIsGrantedColumnToAccessLogs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ArduinoGymAccess.Models.AccessDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("device_name");

                    b.Property<string>("Location")
                        .HasColumnType("longtext")
                        .HasColumnName("location");

                    b.HasKey("Id");

                    b.ToTable("access_devices", (string)null);
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.AccessLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessStatus")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("access_status");

                    b.Property<DateTime>("AccessTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("access_time");

                    b.Property<string>("DeniedReason")
                        .HasColumnType("longtext")
                        .HasColumnName("denied_reason");

                    b.Property<bool>("IsGranted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_granted");

                    b.Property<int>("RfidTokenId")
                        .HasColumnType("int")
                        .HasColumnName("rfid_token_id");

                    b.HasKey("Id");

                    b.HasIndex("RfidTokenId");

                    b.ToTable("access_logs", (string)null);
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.DeviceLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int")
                        .HasColumnName("device_id");

                    b.Property<DateTime>("LogTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("log_time");

                    b.Property<int?>("RfidTokenId")
                        .HasColumnType("int")
                        .HasColumnName("rfid_token_id");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("RfidTokenId");

                    b.ToTable("device_logs", (string)null);
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.RfidToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("RfidCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("rfid_code");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("RfidCode")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("rfid_tokens", (string)null);
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.AccessLog", b =>
                {
                    b.HasOne("ArduinoGymAccess.Models.RfidToken", "RfidToken")
                        .WithMany("AccessLogs")
                        .HasForeignKey("RfidTokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RfidToken");
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.DeviceLog", b =>
                {
                    b.HasOne("ArduinoGymAccess.Models.AccessDevice", "Device")
                        .WithMany("DeviceLogs")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArduinoGymAccess.Models.RfidToken", "RfidToken")
                        .WithMany("DeviceLogs")
                        .HasForeignKey("RfidTokenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Device");

                    b.Navigation("RfidToken");
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.RfidToken", b =>
                {
                    b.HasOne("ArduinoGymAccess.Models.User", "User")
                        .WithMany("RfidTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.AccessDevice", b =>
                {
                    b.Navigation("DeviceLogs");
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.RfidToken", b =>
                {
                    b.Navigation("AccessLogs");

                    b.Navigation("DeviceLogs");
                });

            modelBuilder.Entity("ArduinoGymAccess.Models.User", b =>
                {
                    b.Navigation("RfidTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
